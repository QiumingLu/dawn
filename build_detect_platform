#!/bin/sh

OUTPUT=$1
PREFIX=$2
if test -z "$OUTPUT" || test -z "$PREFIX"; then
  echo "usage: $0 <output-filename> <directory_prefix>" >&2
  exit 1
fi

# Deleting existing output, if it exists
rm -f $OUTPUT
touch $OUTPUT

if test -z "$CC"; then
  CC=cc
fi

if test -z "$CXX"; then
  CXX=g++
fi

# Detect OS
if test -z "$TARGET_OS"; then
    TARGET_OS=`uname -s`
fi


PLATFORM_CCFLAGS=
PLATFORM_CXXFLAGS="-std=c++11 -Wall -Wextra -Wno-unused-parameter -Woverloaded-virtual -Wpointer-arith -Wshadow -Wwrite-strings -march=native -pthread -I/usr/local/include -I/usr/include -I./third_party/leveldb/include -I./third_party/voyager/build/release-install/include"
PLATFORM_LDFLAGS="-L/usr/local/lib -L/usr/lib -L./third_party/leveldb/out-shared -L./third_party/voyager/build/release-install/out-shared"
PLATFORM_LIBS="-lpthread -lprotobuf -lleveldb -lvoyager_rpc -lvoyager_core -lvoyager_port -lvoyager_util"

PLATFORM_SHARED_EXT="so"
PLATFORM_SHARED_LDFLAGS="-shared -Wl,-soname -Wl,"
PLATFORM_SHARED_CFLAGS="-fPIC"

if [ "$TARGET_OS" = "Darwin" ]; then
  PLATFORM_SHARED_EXT=dylib
  [ -z "$INSTALL_PATH" ] && INSTALL_PATH=`pwd`
  PLATFORM_SHARED_LDFLAGS="-dynamiclib -install_name $INSTALL_PATH/"
fi
 
DIRS="$PREFIX/machine $PREFIX/network $PREFIX/paxos $PREFIX/storage $PREFIX/util $PREFIX/proto"

PROTOC=protoc 
PROTOS_PATH=$PREFIX/proto
PROTOS=`find $PROTOS_PATH -name '*.proto'`
$PROTOC -I $PROTOS_PATH --cpp_out=$PROTOS_PATH $PROTOS

set -f 
PRUNE_TEST="-name *test*.cc -prune"
PRUNE_BENCH="-name *_bench.cc -prune"
PORTABLE_FILES=`find $DIRS $PRUNE_TEST -o $PRUNE_BENCH -o -name '*.cc' -print | sort | sed "s,^$PREFIX/,," | tr "\n" " "`

set +f
echo "SOURCES=$PORTABLE_FILES" >> $OUTPUT

echo "CC=$CC" >> $OUTPUT
echo "CXX=$CXX" >> $OUTPUT
echo "PLATFORM_LDFLAGS=$PLATFORM_LDFLAGS" >> $OUTPUT
echo "PLATFORM_LIBS=$PLATFORM_LIBS" >> $OUTPUT
echo "PLATFORM_CCFLAGS=$PLATFORM_CCFLAGS" >> $OUTPUT
echo "PLATFORM_CXXFLAGS=$PLATFORM_CXXFLAGS" >> $OUTPUT
echo "PLATFORM_SHARED_EXT=$PLATFORM_SHARED_EXT" >> $OUTPUT
echo "PLATFORM_SHARED_LDFLAGS=$PLATFORM_SHARED_LDFLAGS" >> $OUTPUT
echo "PLATFORM_SHARED_CFLAGS=$PLATFORM_SHARED_CFLAGS" >> $OUTPUT

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: journey.proto

#ifndef PROTOBUF_journey_2eproto__INCLUDED
#define PROTOBUF_journey_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace journey {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_journey_2eproto();
void protobuf_InitDefaults_journey_2eproto();
void protobuf_AssignDesc_journey_2eproto();
void protobuf_ShutdownFile_journey_2eproto();

class RequestMessage;
class ResponseMessage;

enum ProposeType {
  PROPOSE_TYPE_PUT = 0,
  PROPOSE_TYPE_GET = 1,
  PROPOSE_TYPE_DELETE = 2,
  ProposeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProposeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProposeType_IsValid(int value);
const ProposeType ProposeType_MIN = PROPOSE_TYPE_PUT;
const ProposeType ProposeType_MAX = PROPOSE_TYPE_DELETE;
const int ProposeType_ARRAYSIZE = ProposeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProposeType_descriptor();
inline const ::std::string& ProposeType_Name(ProposeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProposeType_descriptor(), value);
}
inline bool ProposeType_Parse(
    const ::std::string& name, ProposeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProposeType>(
    ProposeType_descriptor(), name, value);
}
enum ProposeResult {
  PROPOSE_RESULT_SUCCESS = 0,
  PROPOSE_RESULT_FAIL = 1,
  PROPOSE_RESULT_NOT_FOUND = 2,
  PROPOSE_RESULT_NOT_MASTER = 3,
  ProposeResult_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProposeResult_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProposeResult_IsValid(int value);
const ProposeResult ProposeResult_MIN = PROPOSE_RESULT_SUCCESS;
const ProposeResult ProposeResult_MAX = PROPOSE_RESULT_NOT_MASTER;
const int ProposeResult_ARRAYSIZE = ProposeResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProposeResult_descriptor();
inline const ::std::string& ProposeResult_Name(ProposeResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProposeResult_descriptor(), value);
}
inline bool ProposeResult_Parse(
    const ::std::string& name, ProposeResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProposeResult>(
    ProposeResult_descriptor(), name, value);
}
// ===================================================================

class RequestMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:journey.RequestMessage) */ {
 public:
  RequestMessage();
  virtual ~RequestMessage();

  RequestMessage(const RequestMessage& from);

  inline RequestMessage& operator=(const RequestMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMessage& default_instance();

  static const RequestMessage* internal_default_instance();

  void Swap(RequestMessage* other);

  // implements Message ----------------------------------------------

  inline RequestMessage* New() const { return New(NULL); }

  RequestMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestMessage& from);
  void MergeFrom(const RequestMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestMessage* other);
  void UnsafeMergeFrom(const RequestMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .journey.ProposeType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::journey::ProposeType type() const;
  void set_type(::journey::ProposeType value);

  // optional bytes key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:journey.RequestMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_journey_2eproto_impl();
  friend void  protobuf_AddDesc_journey_2eproto_impl();
  friend void protobuf_AssignDesc_journey_2eproto();
  friend void protobuf_ShutdownFile_journey_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RequestMessage> RequestMessage_default_instance_;

// -------------------------------------------------------------------

class ResponseMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:journey.ResponseMessage) */ {
 public:
  ResponseMessage();
  virtual ~ResponseMessage();

  ResponseMessage(const ResponseMessage& from);

  inline ResponseMessage& operator=(const ResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseMessage& default_instance();

  static const ResponseMessage* internal_default_instance();

  void Swap(ResponseMessage* other);

  // implements Message ----------------------------------------------

  inline ResponseMessage* New() const { return New(NULL); }

  ResponseMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseMessage& from);
  void MergeFrom(const ResponseMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseMessage* other);
  void UnsafeMergeFrom(const ResponseMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .journey.ProposeResult result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::journey::ProposeResult result() const;
  void set_result(::journey::ProposeResult value);

  // optional bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional bool has_master = 3;
  void clear_has_master();
  static const int kHasMasterFieldNumber = 3;
  bool has_master() const;
  void set_has_master(bool value);

  // optional string master_ip = 4;
  void clear_master_ip();
  static const int kMasterIpFieldNumber = 4;
  const ::std::string& master_ip() const;
  void set_master_ip(const ::std::string& value);
  void set_master_ip(const char* value);
  void set_master_ip(const char* value, size_t size);
  ::std::string* mutable_master_ip();
  ::std::string* release_master_ip();
  void set_allocated_master_ip(::std::string* master_ip);

  // optional uint32 master_port = 5;
  void clear_master_port();
  static const int kMasterPortFieldNumber = 5;
  ::google::protobuf::uint32 master_port() const;
  void set_master_port(::google::protobuf::uint32 value);

  // optional uint64 master_version = 6;
  void clear_master_version();
  static const int kMasterVersionFieldNumber = 6;
  ::google::protobuf::uint64 master_version() const;
  void set_master_version(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:journey.ResponseMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr master_ip_;
  int result_;
  bool has_master_;
  ::google::protobuf::uint64 master_version_;
  ::google::protobuf::uint32 master_port_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_journey_2eproto_impl();
  friend void  protobuf_AddDesc_journey_2eproto_impl();
  friend void protobuf_AssignDesc_journey_2eproto();
  friend void protobuf_ShutdownFile_journey_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResponseMessage> ResponseMessage_default_instance_;

// ===================================================================

class JourneyService_Stub;

class JourneyService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline JourneyService() {};
 public:
  virtual ~JourneyService();

  typedef JourneyService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Propose(::google::protobuf::RpcController* controller,
                       const ::journey::RequestMessage* request,
                       ::journey::ResponseMessage* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(JourneyService);
};

class JourneyService_Stub : public JourneyService {
 public:
  JourneyService_Stub(::google::protobuf::RpcChannel* channel);
  JourneyService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~JourneyService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements JourneyService ------------------------------------------

  void Propose(::google::protobuf::RpcController* controller,
                       const ::journey::RequestMessage* request,
                       ::journey::ResponseMessage* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(JourneyService_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestMessage

// optional .journey.ProposeType type = 1;
inline void RequestMessage::clear_type() {
  type_ = 0;
}
inline ::journey::ProposeType RequestMessage::type() const {
  // @@protoc_insertion_point(field_get:journey.RequestMessage.type)
  return static_cast< ::journey::ProposeType >(type_);
}
inline void RequestMessage::set_type(::journey::ProposeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:journey.RequestMessage.type)
}

// optional bytes key = 2;
inline void RequestMessage::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestMessage::key() const {
  // @@protoc_insertion_point(field_get:journey.RequestMessage.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestMessage::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:journey.RequestMessage.key)
}
inline void RequestMessage::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:journey.RequestMessage.key)
}
inline void RequestMessage::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:journey.RequestMessage.key)
}
inline ::std::string* RequestMessage::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:journey.RequestMessage.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestMessage::release_key() {
  // @@protoc_insertion_point(field_release:journey.RequestMessage.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestMessage::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:journey.RequestMessage.key)
}

// optional bytes value = 3;
inline void RequestMessage::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestMessage::value() const {
  // @@protoc_insertion_point(field_get:journey.RequestMessage.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestMessage::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:journey.RequestMessage.value)
}
inline void RequestMessage::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:journey.RequestMessage.value)
}
inline void RequestMessage::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:journey.RequestMessage.value)
}
inline ::std::string* RequestMessage::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:journey.RequestMessage.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestMessage::release_value() {
  // @@protoc_insertion_point(field_release:journey.RequestMessage.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestMessage::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:journey.RequestMessage.value)
}

inline const RequestMessage* RequestMessage::internal_default_instance() {
  return &RequestMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// ResponseMessage

// optional .journey.ProposeResult result = 1;
inline void ResponseMessage::clear_result() {
  result_ = 0;
}
inline ::journey::ProposeResult ResponseMessage::result() const {
  // @@protoc_insertion_point(field_get:journey.ResponseMessage.result)
  return static_cast< ::journey::ProposeResult >(result_);
}
inline void ResponseMessage::set_result(::journey::ProposeResult value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:journey.ResponseMessage.result)
}

// optional bytes value = 2;
inline void ResponseMessage::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseMessage::value() const {
  // @@protoc_insertion_point(field_get:journey.ResponseMessage.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseMessage::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:journey.ResponseMessage.value)
}
inline void ResponseMessage::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:journey.ResponseMessage.value)
}
inline void ResponseMessage::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:journey.ResponseMessage.value)
}
inline ::std::string* ResponseMessage::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:journey.ResponseMessage.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseMessage::release_value() {
  // @@protoc_insertion_point(field_release:journey.ResponseMessage.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseMessage::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:journey.ResponseMessage.value)
}

// optional bool has_master = 3;
inline void ResponseMessage::clear_has_master() {
  has_master_ = false;
}
inline bool ResponseMessage::has_master() const {
  // @@protoc_insertion_point(field_get:journey.ResponseMessage.has_master)
  return has_master_;
}
inline void ResponseMessage::set_has_master(bool value) {
  
  has_master_ = value;
  // @@protoc_insertion_point(field_set:journey.ResponseMessage.has_master)
}

// optional string master_ip = 4;
inline void ResponseMessage::clear_master_ip() {
  master_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseMessage::master_ip() const {
  // @@protoc_insertion_point(field_get:journey.ResponseMessage.master_ip)
  return master_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseMessage::set_master_ip(const ::std::string& value) {
  
  master_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:journey.ResponseMessage.master_ip)
}
inline void ResponseMessage::set_master_ip(const char* value) {
  
  master_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:journey.ResponseMessage.master_ip)
}
inline void ResponseMessage::set_master_ip(const char* value, size_t size) {
  
  master_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:journey.ResponseMessage.master_ip)
}
inline ::std::string* ResponseMessage::mutable_master_ip() {
  
  // @@protoc_insertion_point(field_mutable:journey.ResponseMessage.master_ip)
  return master_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseMessage::release_master_ip() {
  // @@protoc_insertion_point(field_release:journey.ResponseMessage.master_ip)
  
  return master_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseMessage::set_allocated_master_ip(::std::string* master_ip) {
  if (master_ip != NULL) {
    
  } else {
    
  }
  master_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), master_ip);
  // @@protoc_insertion_point(field_set_allocated:journey.ResponseMessage.master_ip)
}

// optional uint32 master_port = 5;
inline void ResponseMessage::clear_master_port() {
  master_port_ = 0u;
}
inline ::google::protobuf::uint32 ResponseMessage::master_port() const {
  // @@protoc_insertion_point(field_get:journey.ResponseMessage.master_port)
  return master_port_;
}
inline void ResponseMessage::set_master_port(::google::protobuf::uint32 value) {
  
  master_port_ = value;
  // @@protoc_insertion_point(field_set:journey.ResponseMessage.master_port)
}

// optional uint64 master_version = 6;
inline void ResponseMessage::clear_master_version() {
  master_version_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResponseMessage::master_version() const {
  // @@protoc_insertion_point(field_get:journey.ResponseMessage.master_version)
  return master_version_;
}
inline void ResponseMessage::set_master_version(::google::protobuf::uint64 value) {
  
  master_version_ = value;
  // @@protoc_insertion_point(field_set:journey.ResponseMessage.master_version)
}

inline const ResponseMessage* ResponseMessage::internal_default_instance() {
  return &ResponseMessage_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace journey

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::journey::ProposeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::journey::ProposeType>() {
  return ::journey::ProposeType_descriptor();
}
template <> struct is_proto_enum< ::journey::ProposeResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::journey::ProposeResult>() {
  return ::journey::ProposeResult_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_journey_2eproto__INCLUDED

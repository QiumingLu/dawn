// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: paxos.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "paxos.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace skywalker {
class PaxosMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PaxosMessage> {};
PaxosMessageDefaultTypeInternal _PaxosMessage_default_instance_;
class CheckPointMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckPointMessage> {};
CheckPointMessageDefaultTypeInternal _CheckPointMessage_default_instance_;
class ContentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Content> {};
ContentDefaultTypeInternal _Content_default_instance_;
class AcceptorStateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AcceptorState> {};
AcceptorStateDefaultTypeInternal _AcceptorState_default_instance_;
class SystemVariablesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SystemVariables> {};
SystemVariablesDefaultTypeInternal _SystemVariables_default_instance_;

namespace {

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace


const ::google::protobuf::uint32* protobuf_Offsets_paxos_2eproto() GOOGLE_ATTRIBUTE_COLD;
const ::google::protobuf::uint32* protobuf_Offsets_paxos_2eproto() {
  static const ::google::protobuf::uint32 offsets[] = {
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMessage, node_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMessage, instance_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMessage, proposal_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMessage, proposal_node_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMessage, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMessage, pre_accepted_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMessage, pre_accepted_node_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMessage, reject_for_promised_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMessage, now_instance_id_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPointMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPointMessage, type_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Content, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Content, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Content, group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Content, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Content, paxos_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Content, checkpoint_msg_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorState, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorState, instance_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorState, promised_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorState, promised_node_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorState, accepted_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorState, accepted_node_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorState, accepted_value_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, membership_),
  };
  return offsets;
}

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(PaxosMessage)},
  { 14, -1, sizeof(CheckPointMessage)},
  { 19, -1, sizeof(Content)},
  { 28, -1, sizeof(AcceptorState)},
  { 38, -1, sizeof(SystemVariables)},
};

static const ::google::protobuf::internal::DefaultInstanceData file_default_instances[] = {
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PaxosMessage_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_CheckPointMessage_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Content_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_AcceptorState_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_SystemVariables_default_instance_), NULL},
};

namespace {

void protobuf_AssignDescriptors() {
  protobuf_AddDesc_paxos_2eproto();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "paxos.proto", schemas, file_default_instances, protobuf_Offsets_paxos_2eproto(), factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void protobuf_ShutdownFile_paxos_2eproto() {
  _PaxosMessage_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CheckPointMessage_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Content_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _AcceptorState_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _SystemVariables_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void protobuf_InitDefaults_paxos_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PaxosMessage_default_instance_.DefaultConstruct();
  _CheckPointMessage_default_instance_.DefaultConstruct();
  _Content_default_instance_.DefaultConstruct();
  _AcceptorState_default_instance_.DefaultConstruct();
  _SystemVariables_default_instance_.DefaultConstruct();
  _Content_default_instance_.get_mutable()->paxos_msg_ = const_cast< ::skywalker::PaxosMessage*>(
      ::skywalker::PaxosMessage::internal_default_instance());
  _Content_default_instance_.get_mutable()->checkpoint_msg_ = const_cast< ::skywalker::CheckPointMessage*>(
      ::skywalker::CheckPointMessage::internal_default_instance());
}

void protobuf_InitDefaults_paxos_2eproto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_InitDefaults_paxos_2eproto_impl);
}
void protobuf_AddDesc_paxos_2eproto_impl() {
  protobuf_InitDefaults_paxos_2eproto();
  static const char descriptor[] = {
      "\n\013paxos.proto\022\tskywalker\"\210\002\n\014PaxosMessag"
      "e\022$\n\004type\030\001 \001(\0162\026.skywalker.MessageType\022"
      "\017\n\007node_id\030\002 \001(\004\022\023\n\013instance_id\030\003 \001(\004\022\023\n"
      "\013proposal_id\030\004 \001(\004\022\030\n\020proposal_node_id\030\005"
      " \001(\004\022\r\n\005value\030\006 \001(\t\022\027\n\017pre_accepted_id\030\007"
      " \001(\004\022\034\n\024pre_accepted_node_id\030\010 \001(\004\022\036\n\026re"
      "ject_for_promised_id\030\t \001(\004\022\027\n\017now_instan"
      "ce_id\030\n \001(\004\"9\n\021CheckPointMessage\022$\n\004type"
      "\030\001 \001(\0162\026.skywalker.MessageType\"\264\001\n\007Conte"
      "nt\022$\n\004type\030\001 \001(\0162\026.skywalker.ContentType"
      "\022\020\n\010group_id\030\002 \001(\r\022\017\n\007version\030\003 \001(\r\022*\n\tp"
      "axos_msg\030\004 \001(\0132\027.skywalker.PaxosMessage\022"
      "4\n\016checkpoint_msg\030\005 \001(\0132\034.skywalker.Chec"
      "kPointMessage\"\232\001\n\rAcceptorState\022\023\n\013insta"
      "nce_id\030\001 \001(\004\022\023\n\013promised_id\030\002 \001(\004\022\030\n\020pro"
      "mised_node_id\030\003 \001(\004\022\023\n\013accepted_id\030\004 \001(\004"
      "\022\030\n\020accepted_node_id\030\005 \001(\004\022\026\n\016accepted_v"
      "alue\030\006 \001(\t\"%\n\017SystemVariables\022\022\n\nmembers"
      "hip\030\001 \003(\004*\376\001\n\013MessageType\022\033\n\027PROPOSER_SE"
      "ND_NEW_VALUE\020\000\022\013\n\007PREPARE\020\001\022\021\n\rPREPARE_R"
      "EPLY\020\002\022\n\n\006ACCEPT\020\003\022\020\n\014ACCEPT_REPLY\020\004\022\024\n\020"
      "NEW_CHOSEN_VALUE\020\005\022\031\n\025LEARNER_ASK_FOR_LE"
      "ARN\020\006\022\036\n\032LEARNER_SEND_LEARNED_VALUE\020\007\022 \n"
      "\034LEARNER_SEND_NOW_INSTANCE_ID\020\010\022!\n\035LEARN"
      "ER_COMFIRM_ASK_FOR_LEARN\020\t*8\n\013ContentTyp"
      "e\022\021\n\rPAXOS_MESSAGE\020\000\022\026\n\022CHECKPOINT_MESSA"
      "GE\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1052);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "paxos.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_paxos_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_paxos_2eproto_once_);
void protobuf_AddDesc_paxos_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_paxos_2eproto_once_,
                 &protobuf_AddDesc_paxos_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_paxos_2eproto {
  StaticDescriptorInitializer_paxos_2eproto() {
    protobuf_AddDesc_paxos_2eproto();
  }
} static_descriptor_initializer_paxos_2eproto_;
const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_enum_descriptors[0];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ContentType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_enum_descriptors[1];
}
bool ContentType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaxosMessage::kTypeFieldNumber;
const int PaxosMessage::kNodeIdFieldNumber;
const int PaxosMessage::kInstanceIdFieldNumber;
const int PaxosMessage::kProposalIdFieldNumber;
const int PaxosMessage::kProposalNodeIdFieldNumber;
const int PaxosMessage::kValueFieldNumber;
const int PaxosMessage::kPreAcceptedIdFieldNumber;
const int PaxosMessage::kPreAcceptedNodeIdFieldNumber;
const int PaxosMessage::kRejectForPromisedIdFieldNumber;
const int PaxosMessage::kNowInstanceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaxosMessage::PaxosMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_paxos_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skywalker.PaxosMessage)
}
PaxosMessage::PaxosMessage(const PaxosMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&node_id_, &from.node_id_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&node_id_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:skywalker.PaxosMessage)
}

void PaxosMessage::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&node_id_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&node_id_) + sizeof(type_));
  _cached_size_ = 0;
}

PaxosMessage::~PaxosMessage() {
  // @@protoc_insertion_point(destructor:skywalker.PaxosMessage)
  SharedDtor();
}

void PaxosMessage::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PaxosMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaxosMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0].descriptor;
}

const PaxosMessage& PaxosMessage::default_instance() {
  protobuf_InitDefaults_paxos_2eproto();
  return *internal_default_instance();
}

PaxosMessage* PaxosMessage::New(::google::protobuf::Arena* arena) const {
  PaxosMessage* n = new PaxosMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaxosMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:skywalker.PaxosMessage)
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&node_id_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&node_id_) + sizeof(type_));
}

bool PaxosMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skywalker.PaxosMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .skywalker.MessageType type = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::skywalker::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 node_id = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 instance_id = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instance_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 proposal_id = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proposal_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 proposal_node_id = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proposal_node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "skywalker.PaxosMessage.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pre_accepted_id = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pre_accepted_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pre_accepted_node_id = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pre_accepted_node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 reject_for_promised_id = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &reject_for_promised_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 now_instance_id = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &now_instance_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skywalker.PaxosMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skywalker.PaxosMessage)
  return false;
#undef DO_
}

void PaxosMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skywalker.PaxosMessage)
  // .skywalker.MessageType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint64 node_id = 2;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->node_id(), output);
  }

  // uint64 instance_id = 3;
  if (this->instance_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->instance_id(), output);
  }

  // uint64 proposal_id = 4;
  if (this->proposal_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->proposal_id(), output);
  }

  // uint64 proposal_node_id = 5;
  if (this->proposal_node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->proposal_node_id(), output);
  }

  // string value = 6;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "skywalker.PaxosMessage.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->value(), output);
  }

  // uint64 pre_accepted_id = 7;
  if (this->pre_accepted_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->pre_accepted_id(), output);
  }

  // uint64 pre_accepted_node_id = 8;
  if (this->pre_accepted_node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->pre_accepted_node_id(), output);
  }

  // uint64 reject_for_promised_id = 9;
  if (this->reject_for_promised_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->reject_for_promised_id(), output);
  }

  // uint64 now_instance_id = 10;
  if (this->now_instance_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->now_instance_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:skywalker.PaxosMessage)
}

::google::protobuf::uint8* PaxosMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skywalker.PaxosMessage)
  // .skywalker.MessageType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint64 node_id = 2;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->node_id(), target);
  }

  // uint64 instance_id = 3;
  if (this->instance_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->instance_id(), target);
  }

  // uint64 proposal_id = 4;
  if (this->proposal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->proposal_id(), target);
  }

  // uint64 proposal_node_id = 5;
  if (this->proposal_node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->proposal_node_id(), target);
  }

  // string value = 6;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "skywalker.PaxosMessage.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->value(), target);
  }

  // uint64 pre_accepted_id = 7;
  if (this->pre_accepted_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->pre_accepted_id(), target);
  }

  // uint64 pre_accepted_node_id = 8;
  if (this->pre_accepted_node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->pre_accepted_node_id(), target);
  }

  // uint64 reject_for_promised_id = 9;
  if (this->reject_for_promised_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->reject_for_promised_id(), target);
  }

  // uint64 now_instance_id = 10;
  if (this->now_instance_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->now_instance_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:skywalker.PaxosMessage)
  return target;
}

size_t PaxosMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skywalker.PaxosMessage)
  size_t total_size = 0;

  // string value = 6;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // uint64 node_id = 2;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->node_id());
  }

  // uint64 instance_id = 3;
  if (this->instance_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instance_id());
  }

  // uint64 proposal_id = 4;
  if (this->proposal_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->proposal_id());
  }

  // uint64 proposal_node_id = 5;
  if (this->proposal_node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->proposal_node_id());
  }

  // uint64 pre_accepted_id = 7;
  if (this->pre_accepted_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pre_accepted_id());
  }

  // uint64 pre_accepted_node_id = 8;
  if (this->pre_accepted_node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pre_accepted_node_id());
  }

  // uint64 reject_for_promised_id = 9;
  if (this->reject_for_promised_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->reject_for_promised_id());
  }

  // uint64 now_instance_id = 10;
  if (this->now_instance_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->now_instance_id());
  }

  // .skywalker.MessageType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaxosMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skywalker.PaxosMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PaxosMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaxosMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skywalker.PaxosMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skywalker.PaxosMessage)
    MergeFrom(*source);
  }
}

void PaxosMessage::MergeFrom(const PaxosMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skywalker.PaxosMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
  if (from.instance_id() != 0) {
    set_instance_id(from.instance_id());
  }
  if (from.proposal_id() != 0) {
    set_proposal_id(from.proposal_id());
  }
  if (from.proposal_node_id() != 0) {
    set_proposal_node_id(from.proposal_node_id());
  }
  if (from.pre_accepted_id() != 0) {
    set_pre_accepted_id(from.pre_accepted_id());
  }
  if (from.pre_accepted_node_id() != 0) {
    set_pre_accepted_node_id(from.pre_accepted_node_id());
  }
  if (from.reject_for_promised_id() != 0) {
    set_reject_for_promised_id(from.reject_for_promised_id());
  }
  if (from.now_instance_id() != 0) {
    set_now_instance_id(from.now_instance_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void PaxosMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skywalker.PaxosMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaxosMessage::CopyFrom(const PaxosMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skywalker.PaxosMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaxosMessage::IsInitialized() const {
  return true;
}

void PaxosMessage::Swap(PaxosMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaxosMessage::InternalSwap(PaxosMessage* other) {
  value_.Swap(&other->value_);
  std::swap(node_id_, other->node_id_);
  std::swap(instance_id_, other->instance_id_);
  std::swap(proposal_id_, other->proposal_id_);
  std::swap(proposal_node_id_, other->proposal_node_id_);
  std::swap(pre_accepted_id_, other->pre_accepted_id_);
  std::swap(pre_accepted_node_id_, other->pre_accepted_node_id_);
  std::swap(reject_for_promised_id_, other->reject_for_promised_id_);
  std::swap(now_instance_id_, other->now_instance_id_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaxosMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PaxosMessage

// .skywalker.MessageType type = 1;
void PaxosMessage::clear_type() {
  type_ = 0;
}
::skywalker::MessageType PaxosMessage::type() const {
  // @@protoc_insertion_point(field_get:skywalker.PaxosMessage.type)
  return static_cast< ::skywalker::MessageType >(type_);
}
void PaxosMessage::set_type(::skywalker::MessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:skywalker.PaxosMessage.type)
}

// uint64 node_id = 2;
void PaxosMessage::clear_node_id() {
  node_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PaxosMessage::node_id() const {
  // @@protoc_insertion_point(field_get:skywalker.PaxosMessage.node_id)
  return node_id_;
}
void PaxosMessage::set_node_id(::google::protobuf::uint64 value) {
  
  node_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.PaxosMessage.node_id)
}

// uint64 instance_id = 3;
void PaxosMessage::clear_instance_id() {
  instance_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PaxosMessage::instance_id() const {
  // @@protoc_insertion_point(field_get:skywalker.PaxosMessage.instance_id)
  return instance_id_;
}
void PaxosMessage::set_instance_id(::google::protobuf::uint64 value) {
  
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.PaxosMessage.instance_id)
}

// uint64 proposal_id = 4;
void PaxosMessage::clear_proposal_id() {
  proposal_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PaxosMessage::proposal_id() const {
  // @@protoc_insertion_point(field_get:skywalker.PaxosMessage.proposal_id)
  return proposal_id_;
}
void PaxosMessage::set_proposal_id(::google::protobuf::uint64 value) {
  
  proposal_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.PaxosMessage.proposal_id)
}

// uint64 proposal_node_id = 5;
void PaxosMessage::clear_proposal_node_id() {
  proposal_node_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PaxosMessage::proposal_node_id() const {
  // @@protoc_insertion_point(field_get:skywalker.PaxosMessage.proposal_node_id)
  return proposal_node_id_;
}
void PaxosMessage::set_proposal_node_id(::google::protobuf::uint64 value) {
  
  proposal_node_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.PaxosMessage.proposal_node_id)
}

// string value = 6;
void PaxosMessage::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PaxosMessage::value() const {
  // @@protoc_insertion_point(field_get:skywalker.PaxosMessage.value)
  return value_.GetNoArena();
}
void PaxosMessage::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:skywalker.PaxosMessage.value)
}
void PaxosMessage::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:skywalker.PaxosMessage.value)
}
void PaxosMessage::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:skywalker.PaxosMessage.value)
}
::std::string* PaxosMessage::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:skywalker.PaxosMessage.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PaxosMessage::release_value() {
  // @@protoc_insertion_point(field_release:skywalker.PaxosMessage.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PaxosMessage::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:skywalker.PaxosMessage.value)
}

// uint64 pre_accepted_id = 7;
void PaxosMessage::clear_pre_accepted_id() {
  pre_accepted_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PaxosMessage::pre_accepted_id() const {
  // @@protoc_insertion_point(field_get:skywalker.PaxosMessage.pre_accepted_id)
  return pre_accepted_id_;
}
void PaxosMessage::set_pre_accepted_id(::google::protobuf::uint64 value) {
  
  pre_accepted_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.PaxosMessage.pre_accepted_id)
}

// uint64 pre_accepted_node_id = 8;
void PaxosMessage::clear_pre_accepted_node_id() {
  pre_accepted_node_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PaxosMessage::pre_accepted_node_id() const {
  // @@protoc_insertion_point(field_get:skywalker.PaxosMessage.pre_accepted_node_id)
  return pre_accepted_node_id_;
}
void PaxosMessage::set_pre_accepted_node_id(::google::protobuf::uint64 value) {
  
  pre_accepted_node_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.PaxosMessage.pre_accepted_node_id)
}

// uint64 reject_for_promised_id = 9;
void PaxosMessage::clear_reject_for_promised_id() {
  reject_for_promised_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PaxosMessage::reject_for_promised_id() const {
  // @@protoc_insertion_point(field_get:skywalker.PaxosMessage.reject_for_promised_id)
  return reject_for_promised_id_;
}
void PaxosMessage::set_reject_for_promised_id(::google::protobuf::uint64 value) {
  
  reject_for_promised_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.PaxosMessage.reject_for_promised_id)
}

// uint64 now_instance_id = 10;
void PaxosMessage::clear_now_instance_id() {
  now_instance_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PaxosMessage::now_instance_id() const {
  // @@protoc_insertion_point(field_get:skywalker.PaxosMessage.now_instance_id)
  return now_instance_id_;
}
void PaxosMessage::set_now_instance_id(::google::protobuf::uint64 value) {
  
  now_instance_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.PaxosMessage.now_instance_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckPointMessage::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckPointMessage::CheckPointMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_paxos_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skywalker.CheckPointMessage)
}
CheckPointMessage::CheckPointMessage(const CheckPointMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:skywalker.CheckPointMessage)
}

void CheckPointMessage::SharedCtor() {
  type_ = 0;
  _cached_size_ = 0;
}

CheckPointMessage::~CheckPointMessage() {
  // @@protoc_insertion_point(destructor:skywalker.CheckPointMessage)
  SharedDtor();
}

void CheckPointMessage::SharedDtor() {
}

void CheckPointMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckPointMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1].descriptor;
}

const CheckPointMessage& CheckPointMessage::default_instance() {
  protobuf_InitDefaults_paxos_2eproto();
  return *internal_default_instance();
}

CheckPointMessage* CheckPointMessage::New(::google::protobuf::Arena* arena) const {
  CheckPointMessage* n = new CheckPointMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckPointMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:skywalker.CheckPointMessage)
  type_ = 0;
}

bool CheckPointMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skywalker.CheckPointMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .skywalker.MessageType type = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::skywalker::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skywalker.CheckPointMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skywalker.CheckPointMessage)
  return false;
#undef DO_
}

void CheckPointMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skywalker.CheckPointMessage)
  // .skywalker.MessageType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:skywalker.CheckPointMessage)
}

::google::protobuf::uint8* CheckPointMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skywalker.CheckPointMessage)
  // .skywalker.MessageType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:skywalker.CheckPointMessage)
  return target;
}

size_t CheckPointMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skywalker.CheckPointMessage)
  size_t total_size = 0;

  // .skywalker.MessageType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckPointMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skywalker.CheckPointMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckPointMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckPointMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skywalker.CheckPointMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skywalker.CheckPointMessage)
    MergeFrom(*source);
  }
}

void CheckPointMessage::MergeFrom(const CheckPointMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skywalker.CheckPointMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CheckPointMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skywalker.CheckPointMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckPointMessage::CopyFrom(const CheckPointMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skywalker.CheckPointMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckPointMessage::IsInitialized() const {
  return true;
}

void CheckPointMessage::Swap(CheckPointMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckPointMessage::InternalSwap(CheckPointMessage* other) {
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckPointMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckPointMessage

// .skywalker.MessageType type = 1;
void CheckPointMessage::clear_type() {
  type_ = 0;
}
::skywalker::MessageType CheckPointMessage::type() const {
  // @@protoc_insertion_point(field_get:skywalker.CheckPointMessage.type)
  return static_cast< ::skywalker::MessageType >(type_);
}
void CheckPointMessage::set_type(::skywalker::MessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:skywalker.CheckPointMessage.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Content::kTypeFieldNumber;
const int Content::kGroupIdFieldNumber;
const int Content::kVersionFieldNumber;
const int Content::kPaxosMsgFieldNumber;
const int Content::kCheckpointMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Content::Content()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_paxos_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skywalker.Content)
}
Content::Content(const Content& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_paxos_msg()) {
    paxos_msg_ = new ::skywalker::PaxosMessage(*from.paxos_msg_);
  } else {
    paxos_msg_ = NULL;
  }
  if (from.has_checkpoint_msg()) {
    checkpoint_msg_ = new ::skywalker::CheckPointMessage(*from.checkpoint_msg_);
  } else {
    checkpoint_msg_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&type_) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:skywalker.Content)
}

void Content::SharedCtor() {
  ::memset(&paxos_msg_, 0, reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&paxos_msg_) + sizeof(version_));
  _cached_size_ = 0;
}

Content::~Content() {
  // @@protoc_insertion_point(destructor:skywalker.Content)
  SharedDtor();
}

void Content::SharedDtor() {
  if (this != internal_default_instance()) {
    delete paxos_msg_;
  }
  if (this != internal_default_instance()) {
    delete checkpoint_msg_;
  }
}

void Content::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Content::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2].descriptor;
}

const Content& Content::default_instance() {
  protobuf_InitDefaults_paxos_2eproto();
  return *internal_default_instance();
}

Content* Content::New(::google::protobuf::Arena* arena) const {
  Content* n = new Content;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Content::Clear() {
// @@protoc_insertion_point(message_clear_start:skywalker.Content)
  if (GetArenaNoVirtual() == NULL && paxos_msg_ != NULL) {
    delete paxos_msg_;
  }
  paxos_msg_ = NULL;
  if (GetArenaNoVirtual() == NULL && checkpoint_msg_ != NULL) {
    delete checkpoint_msg_;
  }
  checkpoint_msg_ = NULL;
  ::memset(&type_, 0, reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&type_) + sizeof(version_));
}

bool Content::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skywalker.Content)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .skywalker.ContentType type = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::skywalker::ContentType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .skywalker.PaxosMessage paxos_msg = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_paxos_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .skywalker.CheckPointMessage checkpoint_msg = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_checkpoint_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skywalker.Content)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skywalker.Content)
  return false;
#undef DO_
}

void Content::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skywalker.Content)
  // .skywalker.ContentType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->version(), output);
  }

  // .skywalker.PaxosMessage paxos_msg = 4;
  if (this->has_paxos_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->paxos_msg_, output);
  }

  // .skywalker.CheckPointMessage checkpoint_msg = 5;
  if (this->has_checkpoint_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->checkpoint_msg_, output);
  }

  // @@protoc_insertion_point(serialize_end:skywalker.Content)
}

::google::protobuf::uint8* Content::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skywalker.Content)
  // .skywalker.ContentType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->version(), target);
  }

  // .skywalker.PaxosMessage paxos_msg = 4;
  if (this->has_paxos_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->paxos_msg_, false, target);
  }

  // .skywalker.CheckPointMessage checkpoint_msg = 5;
  if (this->has_checkpoint_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->checkpoint_msg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:skywalker.Content)
  return target;
}

size_t Content::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skywalker.Content)
  size_t total_size = 0;

  // .skywalker.PaxosMessage paxos_msg = 4;
  if (this->has_paxos_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->paxos_msg_);
  }

  // .skywalker.CheckPointMessage checkpoint_msg = 5;
  if (this->has_checkpoint_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->checkpoint_msg_);
  }

  // .skywalker.ContentType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Content::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skywalker.Content)
  GOOGLE_DCHECK_NE(&from, this);
  const Content* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Content>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skywalker.Content)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skywalker.Content)
    MergeFrom(*source);
  }
}

void Content::MergeFrom(const Content& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skywalker.Content)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_paxos_msg()) {
    mutable_paxos_msg()->::skywalker::PaxosMessage::MergeFrom(from.paxos_msg());
  }
  if (from.has_checkpoint_msg()) {
    mutable_checkpoint_msg()->::skywalker::CheckPointMessage::MergeFrom(from.checkpoint_msg());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void Content::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skywalker.Content)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Content::CopyFrom(const Content& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skywalker.Content)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Content::IsInitialized() const {
  return true;
}

void Content::Swap(Content* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Content::InternalSwap(Content* other) {
  std::swap(paxos_msg_, other->paxos_msg_);
  std::swap(checkpoint_msg_, other->checkpoint_msg_);
  std::swap(type_, other->type_);
  std::swap(group_id_, other->group_id_);
  std::swap(version_, other->version_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Content::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Content

// .skywalker.ContentType type = 1;
void Content::clear_type() {
  type_ = 0;
}
::skywalker::ContentType Content::type() const {
  // @@protoc_insertion_point(field_get:skywalker.Content.type)
  return static_cast< ::skywalker::ContentType >(type_);
}
void Content::set_type(::skywalker::ContentType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:skywalker.Content.type)
}

// uint32 group_id = 2;
void Content::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 Content::group_id() const {
  // @@protoc_insertion_point(field_get:skywalker.Content.group_id)
  return group_id_;
}
void Content::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.Content.group_id)
}

// uint32 version = 3;
void Content::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 Content::version() const {
  // @@protoc_insertion_point(field_get:skywalker.Content.version)
  return version_;
}
void Content::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:skywalker.Content.version)
}

// .skywalker.PaxosMessage paxos_msg = 4;
bool Content::has_paxos_msg() const {
  return this != internal_default_instance() && paxos_msg_ != NULL;
}
void Content::clear_paxos_msg() {
  if (GetArenaNoVirtual() == NULL && paxos_msg_ != NULL) delete paxos_msg_;
  paxos_msg_ = NULL;
}
const ::skywalker::PaxosMessage& Content::paxos_msg() const {
  // @@protoc_insertion_point(field_get:skywalker.Content.paxos_msg)
  return paxos_msg_ != NULL ? *paxos_msg_
                         : *::skywalker::PaxosMessage::internal_default_instance();
}
::skywalker::PaxosMessage* Content::mutable_paxos_msg() {
  
  if (paxos_msg_ == NULL) {
    paxos_msg_ = new ::skywalker::PaxosMessage;
  }
  // @@protoc_insertion_point(field_mutable:skywalker.Content.paxos_msg)
  return paxos_msg_;
}
::skywalker::PaxosMessage* Content::release_paxos_msg() {
  // @@protoc_insertion_point(field_release:skywalker.Content.paxos_msg)
  
  ::skywalker::PaxosMessage* temp = paxos_msg_;
  paxos_msg_ = NULL;
  return temp;
}
void Content::set_allocated_paxos_msg(::skywalker::PaxosMessage* paxos_msg) {
  delete paxos_msg_;
  paxos_msg_ = paxos_msg;
  if (paxos_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:skywalker.Content.paxos_msg)
}

// .skywalker.CheckPointMessage checkpoint_msg = 5;
bool Content::has_checkpoint_msg() const {
  return this != internal_default_instance() && checkpoint_msg_ != NULL;
}
void Content::clear_checkpoint_msg() {
  if (GetArenaNoVirtual() == NULL && checkpoint_msg_ != NULL) delete checkpoint_msg_;
  checkpoint_msg_ = NULL;
}
const ::skywalker::CheckPointMessage& Content::checkpoint_msg() const {
  // @@protoc_insertion_point(field_get:skywalker.Content.checkpoint_msg)
  return checkpoint_msg_ != NULL ? *checkpoint_msg_
                         : *::skywalker::CheckPointMessage::internal_default_instance();
}
::skywalker::CheckPointMessage* Content::mutable_checkpoint_msg() {
  
  if (checkpoint_msg_ == NULL) {
    checkpoint_msg_ = new ::skywalker::CheckPointMessage;
  }
  // @@protoc_insertion_point(field_mutable:skywalker.Content.checkpoint_msg)
  return checkpoint_msg_;
}
::skywalker::CheckPointMessage* Content::release_checkpoint_msg() {
  // @@protoc_insertion_point(field_release:skywalker.Content.checkpoint_msg)
  
  ::skywalker::CheckPointMessage* temp = checkpoint_msg_;
  checkpoint_msg_ = NULL;
  return temp;
}
void Content::set_allocated_checkpoint_msg(::skywalker::CheckPointMessage* checkpoint_msg) {
  delete checkpoint_msg_;
  checkpoint_msg_ = checkpoint_msg;
  if (checkpoint_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:skywalker.Content.checkpoint_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AcceptorState::kInstanceIdFieldNumber;
const int AcceptorState::kPromisedIdFieldNumber;
const int AcceptorState::kPromisedNodeIdFieldNumber;
const int AcceptorState::kAcceptedIdFieldNumber;
const int AcceptorState::kAcceptedNodeIdFieldNumber;
const int AcceptorState::kAcceptedValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AcceptorState::AcceptorState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_paxos_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skywalker.AcceptorState)
}
AcceptorState::AcceptorState(const AcceptorState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accepted_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accepted_value().size() > 0) {
    accepted_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accepted_value_);
  }
  ::memcpy(&instance_id_, &from.instance_id_,
    reinterpret_cast<char*>(&accepted_node_id_) -
    reinterpret_cast<char*>(&instance_id_) + sizeof(accepted_node_id_));
  // @@protoc_insertion_point(copy_constructor:skywalker.AcceptorState)
}

void AcceptorState::SharedCtor() {
  accepted_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&instance_id_, 0, reinterpret_cast<char*>(&accepted_node_id_) -
    reinterpret_cast<char*>(&instance_id_) + sizeof(accepted_node_id_));
  _cached_size_ = 0;
}

AcceptorState::~AcceptorState() {
  // @@protoc_insertion_point(destructor:skywalker.AcceptorState)
  SharedDtor();
}

void AcceptorState::SharedDtor() {
  accepted_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AcceptorState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptorState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[3].descriptor;
}

const AcceptorState& AcceptorState::default_instance() {
  protobuf_InitDefaults_paxos_2eproto();
  return *internal_default_instance();
}

AcceptorState* AcceptorState::New(::google::protobuf::Arena* arena) const {
  AcceptorState* n = new AcceptorState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AcceptorState::Clear() {
// @@protoc_insertion_point(message_clear_start:skywalker.AcceptorState)
  accepted_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&instance_id_, 0, reinterpret_cast<char*>(&accepted_node_id_) -
    reinterpret_cast<char*>(&instance_id_) + sizeof(accepted_node_id_));
}

bool AcceptorState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skywalker.AcceptorState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 instance_id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instance_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 promised_id = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &promised_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 promised_node_id = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &promised_node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accepted_id = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accepted_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accepted_node_id = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accepted_node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string accepted_value = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accepted_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accepted_value().data(), this->accepted_value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "skywalker.AcceptorState.accepted_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skywalker.AcceptorState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skywalker.AcceptorState)
  return false;
#undef DO_
}

void AcceptorState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skywalker.AcceptorState)
  // uint64 instance_id = 1;
  if (this->instance_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->instance_id(), output);
  }

  // uint64 promised_id = 2;
  if (this->promised_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->promised_id(), output);
  }

  // uint64 promised_node_id = 3;
  if (this->promised_node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->promised_node_id(), output);
  }

  // uint64 accepted_id = 4;
  if (this->accepted_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->accepted_id(), output);
  }

  // uint64 accepted_node_id = 5;
  if (this->accepted_node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->accepted_node_id(), output);
  }

  // string accepted_value = 6;
  if (this->accepted_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accepted_value().data(), this->accepted_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "skywalker.AcceptorState.accepted_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->accepted_value(), output);
  }

  // @@protoc_insertion_point(serialize_end:skywalker.AcceptorState)
}

::google::protobuf::uint8* AcceptorState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skywalker.AcceptorState)
  // uint64 instance_id = 1;
  if (this->instance_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->instance_id(), target);
  }

  // uint64 promised_id = 2;
  if (this->promised_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->promised_id(), target);
  }

  // uint64 promised_node_id = 3;
  if (this->promised_node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->promised_node_id(), target);
  }

  // uint64 accepted_id = 4;
  if (this->accepted_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->accepted_id(), target);
  }

  // uint64 accepted_node_id = 5;
  if (this->accepted_node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->accepted_node_id(), target);
  }

  // string accepted_value = 6;
  if (this->accepted_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accepted_value().data(), this->accepted_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "skywalker.AcceptorState.accepted_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->accepted_value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:skywalker.AcceptorState)
  return target;
}

size_t AcceptorState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skywalker.AcceptorState)
  size_t total_size = 0;

  // string accepted_value = 6;
  if (this->accepted_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accepted_value());
  }

  // uint64 instance_id = 1;
  if (this->instance_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instance_id());
  }

  // uint64 promised_id = 2;
  if (this->promised_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promised_id());
  }

  // uint64 promised_node_id = 3;
  if (this->promised_node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promised_node_id());
  }

  // uint64 accepted_id = 4;
  if (this->accepted_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accepted_id());
  }

  // uint64 accepted_node_id = 5;
  if (this->accepted_node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accepted_node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptorState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skywalker.AcceptorState)
  GOOGLE_DCHECK_NE(&from, this);
  const AcceptorState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AcceptorState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skywalker.AcceptorState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skywalker.AcceptorState)
    MergeFrom(*source);
  }
}

void AcceptorState::MergeFrom(const AcceptorState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skywalker.AcceptorState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.accepted_value().size() > 0) {

    accepted_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accepted_value_);
  }
  if (from.instance_id() != 0) {
    set_instance_id(from.instance_id());
  }
  if (from.promised_id() != 0) {
    set_promised_id(from.promised_id());
  }
  if (from.promised_node_id() != 0) {
    set_promised_node_id(from.promised_node_id());
  }
  if (from.accepted_id() != 0) {
    set_accepted_id(from.accepted_id());
  }
  if (from.accepted_node_id() != 0) {
    set_accepted_node_id(from.accepted_node_id());
  }
}

void AcceptorState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skywalker.AcceptorState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptorState::CopyFrom(const AcceptorState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skywalker.AcceptorState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptorState::IsInitialized() const {
  return true;
}

void AcceptorState::Swap(AcceptorState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AcceptorState::InternalSwap(AcceptorState* other) {
  accepted_value_.Swap(&other->accepted_value_);
  std::swap(instance_id_, other->instance_id_);
  std::swap(promised_id_, other->promised_id_);
  std::swap(promised_node_id_, other->promised_node_id_);
  std::swap(accepted_id_, other->accepted_id_);
  std::swap(accepted_node_id_, other->accepted_node_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AcceptorState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AcceptorState

// uint64 instance_id = 1;
void AcceptorState::clear_instance_id() {
  instance_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AcceptorState::instance_id() const {
  // @@protoc_insertion_point(field_get:skywalker.AcceptorState.instance_id)
  return instance_id_;
}
void AcceptorState::set_instance_id(::google::protobuf::uint64 value) {
  
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.AcceptorState.instance_id)
}

// uint64 promised_id = 2;
void AcceptorState::clear_promised_id() {
  promised_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AcceptorState::promised_id() const {
  // @@protoc_insertion_point(field_get:skywalker.AcceptorState.promised_id)
  return promised_id_;
}
void AcceptorState::set_promised_id(::google::protobuf::uint64 value) {
  
  promised_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.AcceptorState.promised_id)
}

// uint64 promised_node_id = 3;
void AcceptorState::clear_promised_node_id() {
  promised_node_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AcceptorState::promised_node_id() const {
  // @@protoc_insertion_point(field_get:skywalker.AcceptorState.promised_node_id)
  return promised_node_id_;
}
void AcceptorState::set_promised_node_id(::google::protobuf::uint64 value) {
  
  promised_node_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.AcceptorState.promised_node_id)
}

// uint64 accepted_id = 4;
void AcceptorState::clear_accepted_id() {
  accepted_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AcceptorState::accepted_id() const {
  // @@protoc_insertion_point(field_get:skywalker.AcceptorState.accepted_id)
  return accepted_id_;
}
void AcceptorState::set_accepted_id(::google::protobuf::uint64 value) {
  
  accepted_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.AcceptorState.accepted_id)
}

// uint64 accepted_node_id = 5;
void AcceptorState::clear_accepted_node_id() {
  accepted_node_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AcceptorState::accepted_node_id() const {
  // @@protoc_insertion_point(field_get:skywalker.AcceptorState.accepted_node_id)
  return accepted_node_id_;
}
void AcceptorState::set_accepted_node_id(::google::protobuf::uint64 value) {
  
  accepted_node_id_ = value;
  // @@protoc_insertion_point(field_set:skywalker.AcceptorState.accepted_node_id)
}

// string accepted_value = 6;
void AcceptorState::clear_accepted_value() {
  accepted_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AcceptorState::accepted_value() const {
  // @@protoc_insertion_point(field_get:skywalker.AcceptorState.accepted_value)
  return accepted_value_.GetNoArena();
}
void AcceptorState::set_accepted_value(const ::std::string& value) {
  
  accepted_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:skywalker.AcceptorState.accepted_value)
}
void AcceptorState::set_accepted_value(const char* value) {
  
  accepted_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:skywalker.AcceptorState.accepted_value)
}
void AcceptorState::set_accepted_value(const char* value, size_t size) {
  
  accepted_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:skywalker.AcceptorState.accepted_value)
}
::std::string* AcceptorState::mutable_accepted_value() {
  
  // @@protoc_insertion_point(field_mutable:skywalker.AcceptorState.accepted_value)
  return accepted_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AcceptorState::release_accepted_value() {
  // @@protoc_insertion_point(field_release:skywalker.AcceptorState.accepted_value)
  
  return accepted_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AcceptorState::set_allocated_accepted_value(::std::string* accepted_value) {
  if (accepted_value != NULL) {
    
  } else {
    
  }
  accepted_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accepted_value);
  // @@protoc_insertion_point(field_set_allocated:skywalker.AcceptorState.accepted_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemVariables::kMembershipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemVariables::SystemVariables()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_paxos_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:skywalker.SystemVariables)
}
SystemVariables::SystemVariables(const SystemVariables& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      membership_(from.membership_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:skywalker.SystemVariables)
}

void SystemVariables::SharedCtor() {
  _cached_size_ = 0;
}

SystemVariables::~SystemVariables() {
  // @@protoc_insertion_point(destructor:skywalker.SystemVariables)
  SharedDtor();
}

void SystemVariables::SharedDtor() {
}

void SystemVariables::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemVariables::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[4].descriptor;
}

const SystemVariables& SystemVariables::default_instance() {
  protobuf_InitDefaults_paxos_2eproto();
  return *internal_default_instance();
}

SystemVariables* SystemVariables::New(::google::protobuf::Arena* arena) const {
  SystemVariables* n = new SystemVariables;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SystemVariables::Clear() {
// @@protoc_insertion_point(message_clear_start:skywalker.SystemVariables)
  membership_.Clear();
}

bool SystemVariables::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:skywalker.SystemVariables)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 membership = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_membership())));
        } else if (tag == 8u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_membership())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:skywalker.SystemVariables)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:skywalker.SystemVariables)
  return false;
#undef DO_
}

void SystemVariables::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:skywalker.SystemVariables)
  // repeated uint64 membership = 1;
  if (this->membership_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_membership_cached_byte_size_);
  }
  for (int i = 0; i < this->membership_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->membership(i), output);
  }

  // @@protoc_insertion_point(serialize_end:skywalker.SystemVariables)
}

::google::protobuf::uint8* SystemVariables::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:skywalker.SystemVariables)
  // repeated uint64 membership = 1;
  if (this->membership_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _membership_cached_byte_size_, target);
  }
  for (int i = 0; i < this->membership_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->membership(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:skywalker.SystemVariables)
  return target;
}

size_t SystemVariables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:skywalker.SystemVariables)
  size_t total_size = 0;

  // repeated uint64 membership = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->membership_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->membership(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _membership_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemVariables::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:skywalker.SystemVariables)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemVariables* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemVariables>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:skywalker.SystemVariables)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:skywalker.SystemVariables)
    MergeFrom(*source);
  }
}

void SystemVariables::MergeFrom(const SystemVariables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:skywalker.SystemVariables)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  membership_.MergeFrom(from.membership_);
}

void SystemVariables::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:skywalker.SystemVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemVariables::CopyFrom(const SystemVariables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:skywalker.SystemVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemVariables::IsInitialized() const {
  return true;
}

void SystemVariables::Swap(SystemVariables* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemVariables::InternalSwap(SystemVariables* other) {
  membership_.UnsafeArenaSwap(&other->membership_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SystemVariables::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SystemVariables

// repeated uint64 membership = 1;
int SystemVariables::membership_size() const {
  return membership_.size();
}
void SystemVariables::clear_membership() {
  membership_.Clear();
}
::google::protobuf::uint64 SystemVariables::membership(int index) const {
  // @@protoc_insertion_point(field_get:skywalker.SystemVariables.membership)
  return membership_.Get(index);
}
void SystemVariables::set_membership(int index, ::google::protobuf::uint64 value) {
  membership_.Set(index, value);
  // @@protoc_insertion_point(field_set:skywalker.SystemVariables.membership)
}
void SystemVariables::add_membership(::google::protobuf::uint64 value) {
  membership_.Add(value);
  // @@protoc_insertion_point(field_add:skywalker.SystemVariables.membership)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SystemVariables::membership() const {
  // @@protoc_insertion_point(field_list:skywalker.SystemVariables.membership)
  return membership_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SystemVariables::mutable_membership() {
  // @@protoc_insertion_point(field_mutable_list:skywalker.SystemVariables.membership)
  return &membership_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace skywalker

// @@protoc_insertion_point(global_scope)

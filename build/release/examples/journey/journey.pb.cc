// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: journey.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "journey.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace journey {

namespace {

const ::google::protobuf::Descriptor* RequestMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ProposeType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ProposeResult_descriptor_ = NULL;
const ::google::protobuf::ServiceDescriptor* JourneyService_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_journey_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_journey_2eproto() {
  protobuf_AddDesc_journey_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "journey.proto");
  GOOGLE_CHECK(file != NULL);
  RequestMessage_descriptor_ = file->message_type(0);
  static const int RequestMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMessage, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMessage, value_),
  };
  RequestMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RequestMessage_descriptor_,
      RequestMessage::internal_default_instance(),
      RequestMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(RequestMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMessage, _internal_metadata_));
  ResponseMessage_descriptor_ = file->message_type(1);
  static const int ResponseMessage_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, has_master_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, master_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, master_port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, master_version_),
  };
  ResponseMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResponseMessage_descriptor_,
      ResponseMessage::internal_default_instance(),
      ResponseMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResponseMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, _internal_metadata_));
  ProposeType_descriptor_ = file->enum_type(0);
  ProposeResult_descriptor_ = file->enum_type(1);
  JourneyService_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_journey_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RequestMessage_descriptor_, RequestMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResponseMessage_descriptor_, ResponseMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_journey_2eproto() {
  RequestMessage_default_instance_.Shutdown();
  delete RequestMessage_reflection_;
  ResponseMessage_default_instance_.Shutdown();
  delete ResponseMessage_reflection_;
}

void protobuf_InitDefaults_journey_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  RequestMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ResponseMessage_default_instance_.DefaultConstruct();
  RequestMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  ResponseMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_journey_2eproto_once_);
void protobuf_InitDefaults_journey_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_journey_2eproto_once_,
                 &protobuf_InitDefaults_journey_2eproto_impl);
}
void protobuf_AddDesc_journey_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_journey_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rjourney.proto\022\007journey\"P\n\016RequestMessa"
    "ge\022\"\n\004type\030\001 \001(\0162\024.journey.ProposeType\022\013"
    "\n\003key\030\002 \001(\014\022\r\n\005value\030\003 \001(\014\"\234\001\n\017ResponseM"
    "essage\022&\n\006result\030\001 \001(\0162\026.journey.Propose"
    "Result\022\r\n\005value\030\002 \001(\014\022\022\n\nhas_master\030\003 \001("
    "\010\022\021\n\tmaster_ip\030\004 \001(\t\022\023\n\013master_port\030\005 \001("
    "\r\022\026\n\016master_version\030\006 \001(\004*R\n\013ProposeType"
    "\022\024\n\020PROPOSE_TYPE_PUT\020\000\022\024\n\020PROPOSE_TYPE_G"
    "ET\020\001\022\027\n\023PROPOSE_TYPE_DELETE\020\002*\201\001\n\rPropos"
    "eResult\022\032\n\026PROPOSE_RESULT_SUCCESS\020\000\022\027\n\023P"
    "ROPOSE_RESULT_FAIL\020\001\022\034\n\030PROPOSE_RESULT_N"
    "OT_FOUND\020\002\022\035\n\031PROPOSE_RESULT_NOT_MASTER\020"
    "\0032P\n\016JourneyService\022>\n\007Propose\022\027.journey"
    ".RequestMessage\032\030.journey.ResponseMessag"
    "e\"\000B\003\200\001\001b\006proto3", 576);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "journey.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_journey_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_journey_2eproto_once_);
void protobuf_AddDesc_journey_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_journey_2eproto_once_,
                 &protobuf_AddDesc_journey_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_journey_2eproto {
  StaticDescriptorInitializer_journey_2eproto() {
    protobuf_AddDesc_journey_2eproto();
  }
} static_descriptor_initializer_journey_2eproto_;
const ::google::protobuf::EnumDescriptor* ProposeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProposeType_descriptor_;
}
bool ProposeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ProposeResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProposeResult_descriptor_;
}
bool ProposeResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestMessage::kTypeFieldNumber;
const int RequestMessage::kKeyFieldNumber;
const int RequestMessage::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestMessage::RequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_journey_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:journey.RequestMessage)
}

void RequestMessage::InitAsDefaultInstance() {
}

RequestMessage::RequestMessage(const RequestMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:journey.RequestMessage)
}

void RequestMessage::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

RequestMessage::~RequestMessage() {
  // @@protoc_insertion_point(destructor:journey.RequestMessage)
  SharedDtor();
}

void RequestMessage::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestMessage_descriptor_;
}

const RequestMessage& RequestMessage::default_instance() {
  protobuf_InitDefaults_journey_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RequestMessage> RequestMessage_default_instance_;

RequestMessage* RequestMessage::New(::google::protobuf::Arena* arena) const {
  RequestMessage* n = new RequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:journey.RequestMessage)
  type_ = 0;
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:journey.RequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .journey.ProposeType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::journey::ProposeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key;
        break;
      }

      // optional bytes key = 2;
      case 2: {
        if (tag == 18) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // optional bytes value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:journey.RequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:journey.RequestMessage)
  return false;
#undef DO_
}

void RequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:journey.RequestMessage)
  // optional .journey.ProposeType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // optional bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:journey.RequestMessage)
}

::google::protobuf::uint8* RequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:journey.RequestMessage)
  // optional .journey.ProposeType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // optional bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:journey.RequestMessage)
  return target;
}

size_t RequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:journey.RequestMessage)
  size_t total_size = 0;

  // optional .journey.ProposeType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // optional bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:journey.RequestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:journey.RequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:journey.RequestMessage)
    UnsafeMergeFrom(*source);
  }
}

void RequestMessage::MergeFrom(const RequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:journey.RequestMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RequestMessage::UnsafeMergeFrom(const RequestMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void RequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:journey.RequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestMessage::CopyFrom(const RequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:journey.RequestMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RequestMessage::IsInitialized() const {

  return true;
}

void RequestMessage::Swap(RequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestMessage::InternalSwap(RequestMessage* other) {
  std::swap(type_, other->type_);
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestMessage_descriptor_;
  metadata.reflection = RequestMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestMessage

// optional .journey.ProposeType type = 1;
void RequestMessage::clear_type() {
  type_ = 0;
}
::journey::ProposeType RequestMessage::type() const {
  // @@protoc_insertion_point(field_get:journey.RequestMessage.type)
  return static_cast< ::journey::ProposeType >(type_);
}
void RequestMessage::set_type(::journey::ProposeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:journey.RequestMessage.type)
}

// optional bytes key = 2;
void RequestMessage::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestMessage::key() const {
  // @@protoc_insertion_point(field_get:journey.RequestMessage.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestMessage::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:journey.RequestMessage.key)
}
void RequestMessage::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:journey.RequestMessage.key)
}
void RequestMessage::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:journey.RequestMessage.key)
}
::std::string* RequestMessage::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:journey.RequestMessage.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestMessage::release_key() {
  // @@protoc_insertion_point(field_release:journey.RequestMessage.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestMessage::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:journey.RequestMessage.key)
}

// optional bytes value = 3;
void RequestMessage::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestMessage::value() const {
  // @@protoc_insertion_point(field_get:journey.RequestMessage.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestMessage::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:journey.RequestMessage.value)
}
void RequestMessage::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:journey.RequestMessage.value)
}
void RequestMessage::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:journey.RequestMessage.value)
}
::std::string* RequestMessage::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:journey.RequestMessage.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestMessage::release_value() {
  // @@protoc_insertion_point(field_release:journey.RequestMessage.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestMessage::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:journey.RequestMessage.value)
}

inline const RequestMessage* RequestMessage::internal_default_instance() {
  return &RequestMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseMessage::kResultFieldNumber;
const int ResponseMessage::kValueFieldNumber;
const int ResponseMessage::kHasMasterFieldNumber;
const int ResponseMessage::kMasterIpFieldNumber;
const int ResponseMessage::kMasterPortFieldNumber;
const int ResponseMessage::kMasterVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseMessage::ResponseMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_journey_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:journey.ResponseMessage)
}

void ResponseMessage::InitAsDefaultInstance() {
}

ResponseMessage::ResponseMessage(const ResponseMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:journey.ResponseMessage)
}

void ResponseMessage::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  master_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, reinterpret_cast<char*>(&master_port_) -
    reinterpret_cast<char*>(&result_) + sizeof(master_port_));
  _cached_size_ = 0;
}

ResponseMessage::~ResponseMessage() {
  // @@protoc_insertion_point(destructor:journey.ResponseMessage)
  SharedDtor();
}

void ResponseMessage::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  master_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponseMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseMessage_descriptor_;
}

const ResponseMessage& ResponseMessage::default_instance() {
  protobuf_InitDefaults_journey_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ResponseMessage> ResponseMessage_default_instance_;

ResponseMessage* ResponseMessage::New(::google::protobuf::Arena* arena) const {
  ResponseMessage* n = new ResponseMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:journey.ResponseMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ResponseMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ResponseMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(result_, master_port_);
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  master_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ResponseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:journey.ResponseMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .journey.ProposeResult result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::journey::ProposeResult >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_has_master;
        break;
      }

      // optional bool has_master = 3;
      case 3: {
        if (tag == 24) {
         parse_has_master:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_master_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_master_ip;
        break;
      }

      // optional string master_ip = 4;
      case 4: {
        if (tag == 34) {
         parse_master_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_master_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->master_ip().data(), this->master_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "journey.ResponseMessage.master_ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_master_port;
        break;
      }

      // optional uint32 master_port = 5;
      case 5: {
        if (tag == 40) {
         parse_master_port:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &master_port_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_master_version;
        break;
      }

      // optional uint64 master_version = 6;
      case 6: {
        if (tag == 48) {
         parse_master_version:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &master_version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:journey.ResponseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:journey.ResponseMessage)
  return false;
#undef DO_
}

void ResponseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:journey.ResponseMessage)
  // optional .journey.ProposeResult result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // optional bool has_master = 3;
  if (this->has_master() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->has_master(), output);
  }

  // optional string master_ip = 4;
  if (this->master_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_ip().data(), this->master_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "journey.ResponseMessage.master_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->master_ip(), output);
  }

  // optional uint32 master_port = 5;
  if (this->master_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->master_port(), output);
  }

  // optional uint64 master_version = 6;
  if (this->master_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->master_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:journey.ResponseMessage)
}

::google::protobuf::uint8* ResponseMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:journey.ResponseMessage)
  // optional .journey.ProposeResult result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // optional bool has_master = 3;
  if (this->has_master() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->has_master(), target);
  }

  // optional string master_ip = 4;
  if (this->master_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_ip().data(), this->master_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "journey.ResponseMessage.master_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->master_ip(), target);
  }

  // optional uint32 master_port = 5;
  if (this->master_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->master_port(), target);
  }

  // optional uint64 master_version = 6;
  if (this->master_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->master_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:journey.ResponseMessage)
  return target;
}

size_t ResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:journey.ResponseMessage)
  size_t total_size = 0;

  // optional .journey.ProposeResult result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  // optional bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // optional bool has_master = 3;
  if (this->has_master() != 0) {
    total_size += 1 + 1;
  }

  // optional string master_ip = 4;
  if (this->master_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->master_ip());
  }

  // optional uint32 master_port = 5;
  if (this->master_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->master_port());
  }

  // optional uint64 master_version = 6;
  if (this->master_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->master_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:journey.ResponseMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResponseMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:journey.ResponseMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:journey.ResponseMessage)
    UnsafeMergeFrom(*source);
  }
}

void ResponseMessage::MergeFrom(const ResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:journey.ResponseMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ResponseMessage::UnsafeMergeFrom(const ResponseMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_master() != 0) {
    set_has_master(from.has_master());
  }
  if (from.master_ip().size() > 0) {

    master_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_ip_);
  }
  if (from.master_port() != 0) {
    set_master_port(from.master_port());
  }
  if (from.master_version() != 0) {
    set_master_version(from.master_version());
  }
}

void ResponseMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:journey.ResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseMessage::CopyFrom(const ResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:journey.ResponseMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ResponseMessage::IsInitialized() const {

  return true;
}

void ResponseMessage::Swap(ResponseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseMessage::InternalSwap(ResponseMessage* other) {
  std::swap(result_, other->result_);
  value_.Swap(&other->value_);
  std::swap(has_master_, other->has_master_);
  master_ip_.Swap(&other->master_ip_);
  std::swap(master_port_, other->master_port_);
  std::swap(master_version_, other->master_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseMessage_descriptor_;
  metadata.reflection = ResponseMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseMessage

// optional .journey.ProposeResult result = 1;
void ResponseMessage::clear_result() {
  result_ = 0;
}
::journey::ProposeResult ResponseMessage::result() const {
  // @@protoc_insertion_point(field_get:journey.ResponseMessage.result)
  return static_cast< ::journey::ProposeResult >(result_);
}
void ResponseMessage::set_result(::journey::ProposeResult value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:journey.ResponseMessage.result)
}

// optional bytes value = 2;
void ResponseMessage::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseMessage::value() const {
  // @@protoc_insertion_point(field_get:journey.ResponseMessage.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseMessage::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:journey.ResponseMessage.value)
}
void ResponseMessage::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:journey.ResponseMessage.value)
}
void ResponseMessage::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:journey.ResponseMessage.value)
}
::std::string* ResponseMessage::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:journey.ResponseMessage.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseMessage::release_value() {
  // @@protoc_insertion_point(field_release:journey.ResponseMessage.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseMessage::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:journey.ResponseMessage.value)
}

// optional bool has_master = 3;
void ResponseMessage::clear_has_master() {
  has_master_ = false;
}
bool ResponseMessage::has_master() const {
  // @@protoc_insertion_point(field_get:journey.ResponseMessage.has_master)
  return has_master_;
}
void ResponseMessage::set_has_master(bool value) {
  
  has_master_ = value;
  // @@protoc_insertion_point(field_set:journey.ResponseMessage.has_master)
}

// optional string master_ip = 4;
void ResponseMessage::clear_master_ip() {
  master_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseMessage::master_ip() const {
  // @@protoc_insertion_point(field_get:journey.ResponseMessage.master_ip)
  return master_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseMessage::set_master_ip(const ::std::string& value) {
  
  master_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:journey.ResponseMessage.master_ip)
}
void ResponseMessage::set_master_ip(const char* value) {
  
  master_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:journey.ResponseMessage.master_ip)
}
void ResponseMessage::set_master_ip(const char* value, size_t size) {
  
  master_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:journey.ResponseMessage.master_ip)
}
::std::string* ResponseMessage::mutable_master_ip() {
  
  // @@protoc_insertion_point(field_mutable:journey.ResponseMessage.master_ip)
  return master_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseMessage::release_master_ip() {
  // @@protoc_insertion_point(field_release:journey.ResponseMessage.master_ip)
  
  return master_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseMessage::set_allocated_master_ip(::std::string* master_ip) {
  if (master_ip != NULL) {
    
  } else {
    
  }
  master_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), master_ip);
  // @@protoc_insertion_point(field_set_allocated:journey.ResponseMessage.master_ip)
}

// optional uint32 master_port = 5;
void ResponseMessage::clear_master_port() {
  master_port_ = 0u;
}
::google::protobuf::uint32 ResponseMessage::master_port() const {
  // @@protoc_insertion_point(field_get:journey.ResponseMessage.master_port)
  return master_port_;
}
void ResponseMessage::set_master_port(::google::protobuf::uint32 value) {
  
  master_port_ = value;
  // @@protoc_insertion_point(field_set:journey.ResponseMessage.master_port)
}

// optional uint64 master_version = 6;
void ResponseMessage::clear_master_version() {
  master_version_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ResponseMessage::master_version() const {
  // @@protoc_insertion_point(field_get:journey.ResponseMessage.master_version)
  return master_version_;
}
void ResponseMessage::set_master_version(::google::protobuf::uint64 value) {
  
  master_version_ = value;
  // @@protoc_insertion_point(field_set:journey.ResponseMessage.master_version)
}

inline const ResponseMessage* ResponseMessage::internal_default_instance() {
  return &ResponseMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

JourneyService::~JourneyService() {}

const ::google::protobuf::ServiceDescriptor* JourneyService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JourneyService_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* JourneyService::GetDescriptor() {
  protobuf_AssignDescriptorsOnce();
  return JourneyService_descriptor_;
}

void JourneyService::Propose(::google::protobuf::RpcController* controller,
                         const ::journey::RequestMessage*,
                         ::journey::ResponseMessage*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Propose() not implemented.");
  done->Run();
}

void JourneyService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), JourneyService_descriptor_);
  switch(method->index()) {
    case 0:
      Propose(controller,
             ::google::protobuf::down_cast<const ::journey::RequestMessage*>(request),
             ::google::protobuf::down_cast< ::journey::ResponseMessage*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& JourneyService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::journey::RequestMessage::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& JourneyService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::journey::ResponseMessage::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

JourneyService_Stub::JourneyService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
JourneyService_Stub::JourneyService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
JourneyService_Stub::~JourneyService_Stub() {
  if (owns_channel_) delete channel_;
}

void JourneyService_Stub::Propose(::google::protobuf::RpcController* controller,
                              const ::journey::RequestMessage* request,
                              ::journey::ResponseMessage* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace journey

// @@protoc_insertion_point(global_scope)
